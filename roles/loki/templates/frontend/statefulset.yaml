apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: '{{ansible_operator_meta.name}}-loki-frontend'
  namespace: '{{ansible_operator_meta.namespace}}'
  labels:
    plugins.cloudminds.com/loki: loki-frontend
    app.kubernetes.io/name: '{{ ansible_operator_meta.name }}-loki-frontend'
spec:
  replicas: {{ service.cluster.frontend.replicas }}
  serviceName: '{{ansible_operator_meta.name}}-loki-frontend' 
  selector:
    matchLabels:
      plugins.cloudminds.com/loki: loki-frontend
      app.kubernetes.io/name: '{{ ansible_operator_meta.name }}-loki-frontend'
  template:
    metadata:
      labels:
        plugins.cloudminds.com/loki: loki-frontend
        app.kubernetes.io/name: '{{ ansible_operator_meta.name }}-loki-frontend'
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    plugins.cloudminds.com/loki: loki-frontend
                    app.kubernetes.io/name: '{{ ansible_operator_meta.name }}-loki-frontend'
                namespaces:
                  - '{{ansible_operator_meta.namespace}}'
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
      containers:
      - name: loki-frontend
        image: '{{service.cluster.frontend.image}}:{{version}}'
        args:
          - "-config.file=/etc/loki/local-config.yaml"
          - "-target=query-frontend"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3100
          name: http-3100
          protocol: TCP
        - containerPort: 9095
          name: http-9095
          protocol: TCP
        resources:
          limits:
            cpu: "4"
            memory: 8Gi
          requests:
            cpu: "1"
            memory: "2Gi"
        volumeMounts:
        - name: loki-config
          mountPath: /etc/loki/
          readOnly: true
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 120
          periodSeconds: 30
          successThreshold: 1
          tcpSocket:
            port: 3100
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add: []
            drop:
            - ALL
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 1001
      securityContext:
        fsGroup: 100
      volumes:
      - name: loki-config
        configMap:
          name: '{{ansible_operator_meta.name}}-loki-conf'